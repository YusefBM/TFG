package language.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAttribute = createDescriptorForAttribute();
  /*package*/ final ConceptDescriptor myConceptBoolean = createDescriptorForBoolean();
  /*package*/ final ConceptDescriptor myConceptDate = createDescriptorForDate();
  /*package*/ final ConceptDescriptor myConceptDouble = createDescriptorForDouble();
  /*package*/ final ConceptDescriptor myConceptEntity = createDescriptorForEntity();
  /*package*/ final ConceptDescriptor myConceptInteger = createDescriptorForInteger();
  /*package*/ final ConceptDescriptor myConceptString = createDescriptorForString();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAttribute, myConceptBoolean, myConceptDate, myConceptDouble, myConceptEntity, myConceptInteger, myConceptString, myConceptType);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Attribute:
        return myConceptAttribute;
      case LanguageConceptSwitch.Boolean:
        return myConceptBoolean;
      case LanguageConceptSwitch.Date:
        return myConceptDate;
      case LanguageConceptSwitch.Double:
        return myConceptDouble;
      case LanguageConceptSwitch.Entity:
        return myConceptEntity;
      case LanguageConceptSwitch.Integer:
        return myConceptInteger;
      case LanguageConceptSwitch.String:
        return myConceptString;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("language", "Attribute", 0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a09492a2edL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3ce91312-507c-4b32-abde-662f31e59cf8(language.structure)/5880858477614768877");
    b.version(3);
    b.aggregate("type", 0x519d01a09492a2f5L).target(0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a09492a2f2L).optional(false).ordered(true).multiple(false).origin("5880858477614768885").done();
    b.alias("attribute");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolean() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("language", "Boolean", 0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a09492a2f9L);
    b.class_(false, false, false);
    // extends: language.structure.Type
    b.super_(0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a09492a2f2L);
    b.origin("r:3ce91312-507c-4b32-abde-662f31e59cf8(language.structure)/5880858477614768889");
    b.version(3);
    b.alias("boolean");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("language", "Date", 0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a094999835L);
    b.class_(false, false, false);
    b.origin("r:3ce91312-507c-4b32-abde-662f31e59cf8(language.structure)/5880858477615224885");
    b.version(3);
    b.alias("date");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDouble() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("language", "Double", 0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a094999834L);
    b.class_(false, false, false);
    b.origin("r:3ce91312-507c-4b32-abde-662f31e59cf8(language.structure)/5880858477615224884");
    b.version(3);
    b.alias("double");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEntity() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("language", "Entity", 0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a09492a2eaL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3ce91312-507c-4b32-abde-662f31e59cf8(language.structure)/5880858477614768874");
    b.version(3);
    b.aggregate("attributes", 0x519d01a09492a2f0L).target(0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a09492a2edL).optional(true).ordered(true).multiple(true).origin("5880858477614768880").done();
    b.alias("entity");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInteger() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("language", "Integer", 0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a09492a2faL);
    b.class_(false, false, false);
    // extends: language.structure.Type
    b.super_(0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a09492a2f2L);
    b.origin("r:3ce91312-507c-4b32-abde-662f31e59cf8(language.structure)/5880858477614768890");
    b.version(3);
    b.alias("int");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForString() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("language", "String", 0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a09492a2fbL);
    b.class_(false, false, false);
    // extends: language.structure.Type
    b.super_(0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a09492a2f2L);
    b.origin("r:3ce91312-507c-4b32-abde-662f31e59cf8(language.structure)/5880858477614768891");
    b.version(3);
    b.alias("string");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("language", "Type", 0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL, 0x519d01a09492a2f2L);
    b.class_(false, true, false);
    b.origin("r:3ce91312-507c-4b32-abde-662f31e59cf8(language.structure)/5880858477614768882");
    b.version(3);
    return b.create();
  }
}
