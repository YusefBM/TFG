package language.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Attribute = 0;
  public static final int Boolean = 1;
  public static final int Date = 2;
  public static final int Double = 3;
  public static final int Entity = 4;
  public static final int Integer = 5;
  public static final int String = 6;
  public static final int Type = 7;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xab7f4811201f4d6dL, 0xa13e8542b1519f5fL);
    builder.put(0x519d01a09492a2edL, Attribute);
    builder.put(0x519d01a09492a2f9L, Boolean);
    builder.put(0x519d01a094999835L, Date);
    builder.put(0x519d01a094999834L, Double);
    builder.put(0x519d01a09492a2eaL, Entity);
    builder.put(0x519d01a09492a2faL, Integer);
    builder.put(0x519d01a09492a2fbL, String);
    builder.put(0x519d01a09492a2f2L, Type);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
